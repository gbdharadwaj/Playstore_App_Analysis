create database playstore;

use playstore;

show tables;

/*1.	Which apps have the highest rating in the given available dataset?*/
select max(rating) as highest_rating,app from clean_App_final 
group by app order by highest_rating desc;

/*or*/
select app highest_rated_apps from clean_app_final where rating in (select max(rating) from clean_app_final);


/*2.	What are the number of installs and reviews for the above apps? 
Return the apps with the highest reviews to the top.*/

select app,sum(installs) as no_of_installs ,sum(reviews) as no_of_reviews,max(reviews)as highest_reviews from
 clean_app_final group by app order by highest_reviews desc;
 
 

/*
3.	Which app has the highest number of reviews? Also, mention the number of reviews and category of the app
*/
 
select max(reviews) as highest_reviews,app,category from clean_App_final 
group by app,category order by highest_reviews desc;
 

 /*4.	What is the total amount of revenue generated by the google play store 
 by hosting apps? (Whenever a user buys apps  from the google play store,
 the amount is considered in the revenue)*/

 select sum(installs*price) as total_amount from clean_App_final;
 
select sum(price) as total_price from clean_app_final;

 /*5.	Which Category of google play store apps has the highest number of installs? 
 also, find out the total number of installs for that particular category.*/
 
 select sum(installs) as highest_installs,category  from clean_App_final
 group by category order by highest_installs desc;
 

 
 /*6.	Which Genre has the most number of published apps?*/

  select count(distinct app) as total_app,genres from clean_app_final  group by genres order by total_app desc;
 
 
 /*7.	Provide the list of all games ordered in such a way that the game 
 that has the highest number of installs is displayed on the top
(to avoid duplicate results use distinct)
*/

select distinct(app),sum(installs) as no_of_installs from clean_App_final 
 where genres =  "game" group by genres order by no_of_installs desc;
 
 /*8.	Provide the list of apps that can work on android version 4.0.3 and UP.*/
 
select app from clean_App_final where "android ver" = "4.0.3 and up";

/*9.	How many apps from the given data set are free? Also, provide the number of paid apps.*/

select count(app)
,type from clean_App_final where type = "free" group by type;

/*
10.	Which is the best dating app? (Best dating app is the one having the highest number of Reviews)
*/



select app,sum(reviews) as total_reviews from clean_App_final where app like "%dating%" group by 
app order by total_reviews desc;

/*11.	Get the number of reviews having positive sentiment and number of reviews having negative sentiment
 for the app 10 best foods for you and compare them.*/

SELECT SUM(CASE WHEN sentiment = 'Positive' THEN 1
		   ELSE 0
		   END) no_of_positives
	  ,SUM(CASE WHEN sentiment = 'Negative' THEN 1
		   ELSE 0
		   END) no_of_negatives
FROM review_final
WHERE app = '10 best foods for you';

/*12.Which comments of ASUS SuperNote have sentiment polarity and sentiment subjectivity both as 1?*/

SELECT translated_review
FROM review_final
WHERE app ='ASUS SuperNote'
AND sentiment_polarity = '1'
AND sentiment_subjectivity = '1';

/*13.	Get all the neutral sentiment reviews for the app Abs Training-Burn belly fat */

select app,translated_review
from review_final
where translated_review = "neutral" and app ="Abs Training-Burn belly fat";

/*14.	Extract all negative sentiment reviews for Adobe Acrobat Reader with their 
sentiment polarity and sentiment subjectivity*/

select distinct translated_review ,sentiment_polarity,sentiment_subjectivity
from review_final
where sentiment = "negative" and app ="adobe acrobat reader";

